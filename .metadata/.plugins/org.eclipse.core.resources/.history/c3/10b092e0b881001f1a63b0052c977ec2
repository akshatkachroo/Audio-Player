/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "system.h"
#include "altera_avalon_pio_regs.h"

int main()
{
  printf("Hello from Nios II!\n");
  //read swutch value
  //if siwtch = 0, interrupts

  int mode = IORD(SWITCH_PIO_BASE, 0);
  int buttons = 0;
  mode &= 0b1;
//  printf("%d", mode);

  if (mode) {  //if switch = 1, tight polling
	  printf("Polling method selected.\n\nPeriod, Pulse_Width, BG_Tasks Run, Latency, Missed, Multiple.\n\nPlease, press PB0 to continue.\n");
	  int pb0 = 0;
	  while (!pb0){
		  buttons = IORD(BUTTON_PIO_BASE,0);
		  pb0 = (~buttons) & 0b1;
	  }
	  tight_polling();
  } else {
	  printf("Interrupt method selected.\n\nPeriod, Pulse_Width, BG_Tasks Run, Latency, Missed, Multiple.\n\nPlease, press PB0 to continue.\n");
	  int pb0 = 0;
	  while (!pb0){
		  buttons = IORD(BUTTON_PIO_BASE,0);
		  pb0 = (~buttons) & 0b1;
	  }
	  interrupt();
  }




  return 0;
}

void tight_polling (){

}

void interrupt (){

}

int background(){
	int j;
	int x = 0;
	int grainsize = 4;
	int g_taskProcessed = 0;
	for(j = 0; j < grainsize; j++){
		g_taskProcessed++;
	}
	return x;
}
